package com.example.mysociety;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Patterns;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.google.android.gms.auth.api.signin.GoogleSignIn;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInClient;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.auth.GoogleAuthProvider;

public class loginActivity extends AppCompatActivity {
EditText uname, pass_word;
Button forgot_pass, login, create_acc, google_login;

private static final int RC_SIGN_IN = 9001;
private FirebaseAuth mAuth;
private GoogleSignInClient mGoogleSignInClient;

@SuppressLint("MissingInflatedId")
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_login);

uname = findViewById(R.id.uname);
pass_word = findViewById(R.id.pass_word);
login = findViewById(R.id.login);
forgot_pass = findViewById(R.id.forgot_pass);
create_acc = findViewById(R.id.create_acc);
google_login = findViewById(R.id.google_login);
mAuth = FirebaseAuth.getInstance();

// Configure Google Sign-In
GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
.requestIdToken(getString(R.string.default_web_client_id))
.requestEmail()
.build();

mGoogleSignInClient = GoogleSignIn.getClient(this, gso);

login.setOnClickListener(view -> loginUser());
create_acc.setOnClickListener(view -> {
Intent intent = new Intent(loginActivity.this, RegistrationActivity.class);
startActivity(intent);
});

forgot_pass.setOnClickListener(view -> {
Intent intent = new Intent(loginActivity.this, forgotpassword.class);
startActivity(intent);
});

google_login.setOnClickListener(v -> signInWithGoogle());
}

private void loginUser() {
String email = uname.getText().toString().trim();
String password = pass_word.getText().toString().trim();

if (TextUtils.isEmpty(email) || !Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
uname.setError("Enter a valid email address");
uname.requestFocus();
return;
} else if (TextUtils.isEmpty(password) || password.length() < 6) {
pass_word.setError("Password must be at least 6 characters");
pass_word.requestFocus();
return;
}

mAuth.signInWithEmailAndPassword(email, password)
.addOnCompleteListener(this, task -> {
if (task.isSuccessful()) {
FirebaseUser user = mAuth.getCurrentUser();
Toast.makeText(loginActivity.this, "Login successful", Toast.LENGTH_SHORT).show();
Intent intent = new Intent(loginActivity.this, userhomescreen.class);
intent.putExtra("email", email);
startActivity(intent);
finish();
} else {
Toast.makeText(loginActivity.this, "Login failed. Check your credentials.", Toast.LENGTH_SHORT).show();
}
});
}

private void signInWithGoogle() {
Intent signInIntent = mGoogleSignInClient.getSignInIntent();
startActivityForResult(signInIntent, RC_SIGN_IN);
}

@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
super.onActivityResult(requestCode, resultCode, data);

if (requestCode == RC_SIGN_IN) {
Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);
try {
GoogleSignInAccount account = task.getResult();
firebaseAuthWithGoogle(account);
} catch (Exception e) {
Toast.makeText(this, "Google Sign-In failed", Toast.LENGTH_SHORT).show();
}
}
}

private void firebaseAuthWithGoogle(GoogleSignInAccount account) {
AuthCredential credential = GoogleAuthProvider.getCredential(account.getIdToken(), null);
mAuth.signInWithCredential(credential)
.addOnCompleteListener(this, task -> {
if (task.isSuccessful()) {
Toast.makeText(loginActivity.this, "Google Sign-In successful", Toast.LENGTH_SHORT).show();
Intent intent = new Intent(loginActivity.this, userhomescreen.class);
startActivity(intent);
finish();
} else {
Toast.makeText(loginActivity.this, "Authentication Failed.", Toast.LENGTH_SHORT).show();
}
});
}
}
